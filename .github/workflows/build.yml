---
name: _build
on:
  workflow_call:
    inputs:
      build_matrix:
        required: true
        type: string
        description: Build matrix for the build job

      build_command:
        required: false
        type: string
        default: "bitbake core-image-base"
        description: Command to run for the build

      build_type:
        required: false
        type: string
        default: "flat_build"
        description: Type of build to perform (flat_build or sdk_build)

jobs:
  build:
    runs-on:
      group: GHA-Audioreach-SelfHosted-RG
      labels: [ self-hosted, audior-prd-u2204-x64-large-od-ephem ]
    strategy:
      fail-fast: false
      matrix:
        build_matrix: ${{ fromJson(inputs.build_matrix) }}
    steps:
      - name: Build docker Image  # Build docker image used to build the project
        id: get-docker-image
        uses: Audioreach/meta-ar/.github/actions/build_docker_image@main

      - name: Sync Codebase
        id: sync
        uses: Audioreach/meta-ar/.github/actions/sync@main
        with:
          event_name: ${{ github.event_name }}
          pr_ref: ${{ github.event.pull_request.head.ref }}
          pr_repo: ${{ github.event.pull_request.head.repo.full_name }}
          base_ref: ${{ github.ref_name }}

      - name: Clone meta-qcom repository
        run: |
          # Clone the meta-qcom repository
          cd ${{ github.workspace }}/..
          # Check if the directory already exists
          if [ -d "meta-qcom" ]; then
            echo "Directory meta-qcom already exists. Pulling latest changes."
            cd meta-qcom
            git reset --hard origin/master
            git pull origin master
          else
            echo "Directory meta-qcom does not exist. Cloning repository."
            git clone https://github.com/qualcomm-linux/meta-qcom.git
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # setup local git config as we need to cherrypick patch from meta-qcom
      - name: Set up local git config
        run: |
          # set git config for this project only not global
          git config --local user.name "GitHub Actions"
          git config --local user.email "github-actions@github.com"

      - name: Build for ${{ matrix.build_matrix.machine }}
        uses: Audioreach/meta-ar/.github/actions/build@main
        with:
          docker_image: ${{ steps.get-docker-image.outputs.image_name }}
          kas_file: ${{ matrix.build_matrix.kas_file }}
          build_command: ${{ inputs.build_command }}
          build_type: ${{ inputs.build_type }}
        env:
          MACHINE: ${{ matrix.build_matrix.machine }}

      - name: Cleanup Workspace
        if: always()
        run: |
          # Cleanup the workspace
          rm -rf ${{ github.workspace }}/../build
          rm -rf ${{ github.workspace }}/../meta-qcom
          rm -rf pub
          echo "Workspace cleaned up."
